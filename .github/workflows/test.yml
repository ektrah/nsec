name: Build and Test

on: [push, pull_request]

jobs:

  test-win:
    needs: test-linux-musl
    runs-on: windows-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    steps:
    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
    - name: Install workloads
      run: dotnet workload install ios tvos maccatalyst
    - run: dotnet --info
    - uses: actions/checkout@v4
    - name: Test (.NET 8.0/Debug)
      run: dotnet test tests -f net8.0 -c Debug
    - name: Test (.NET 8.0/Release)
      run: dotnet test tests -f net8.0 -c Release
    - name: Pack
      run: dotnet pack -c Release
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        path: '**/*.nupkg'

  test-macos:
    needs: test-win
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: macos-13
        - os: macos-14
        - os: macos-15
    runs-on: ${{ matrix.os }}
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    steps:
    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
    - run: dotnet --info
    - uses: actions/checkout@v4
    - name: Test (.NET 8.0/Debug)
      run: dotnet test tests -f net8.0 -c Debug
    - name: Test (.NET 8.0/Release)
      run: dotnet test tests -f net8.0 -c Release

  test-linux:
    needs: test-macos
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: debian:12
        - os: fedora:40
        - os: ubuntu:20.04
        - os: ubuntu:22.04
        - os: ubuntu:24.04
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.os }}
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    steps:
    - name: Install prerequisites
      run: apt-get -qq update && apt-get -qq install --yes --no-install-recommends curl ca-certificates gettext
      if: ${{ startsWith(matrix.os, 'debian') }}
    - name: Install prerequisites
      run: dnf install -q -y curl ca-certificates libicu findutils
      if: ${{ startsWith(matrix.os, 'fedora') }}
    - name: Install prerequisites
      run: apt-get -qq update && apt-get -qq install --yes --no-install-recommends curl ca-certificates gettext
      if: ${{ startsWith(matrix.os, 'ubuntu') }}
    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
    - run: dotnet --info
    - uses: actions/checkout@v4
    - name: Test (.NET 8.0/Debug)
      run: dotnet test tests -f net8.0 -c Debug
    - name: Test (.NET 8.0/Release)
      run: dotnet test tests -f net8.0 -c Release

  test-linux-musl:
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: alpine3.18
        - os: alpine3.19
        - os: alpine3.20
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:8.0-${{ matrix.os }}
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    steps:
    - run: dotnet --info
    - uses: actions/checkout@v4
    - name: Test (.NET 8.0/Debug)
      run: dotnet test tests -f net8.0 -c Debug
    - name: Test (.NET 8.0/Release)
      run: dotnet test tests -f net8.0 -c Release
